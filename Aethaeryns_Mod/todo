AETHAERYN'S MOD TODO LIST (92% Progress)
When this list is complete/empty, bump to version 0.9

 (1) Inventory Containers (2%)
  - Use a slider instead of text input for gold quantity and inventory adding quantity.
  - Use inventory quantity on purchasing instead of assuming just one.

  - Container changes on host or unit actions:
    - shops:
      - shops start as "Shop (Empty)" if no template is chosen or "Shop" otherwise
      - empty shops change to "Shop" if items are added or sold
      - stocked shops change to "Shop (Empty)" if entirely emptied
    - chests:
      - chests start with open icon if no template is chosen or as closed otherwise
      - empty chests change to closed if items are added
      - closed chests change to open if all items are removed
    - gold:
      - gold pile initial size is based on starting gold quantity
      - gold pile size changes based on additions or removals
      - if gold pile is empty it disappears
    - pack:
      - if pack is empty it disappears
      - this means the host cannot place a pack unless a non-empty template is chosen

  - Player container interactions:
    - remove from container (using slider)
      - buy if shop (checks to see if you can afford it)
        - if sliders are powerful enough, maybe it can disable the OK button if you can't afford it
        - or just set the max of the slider to the max you can afford instead of the max of the shop's inventory
      - remove if pack or chest
      - remove gold quantity if gold pile
        - defaults to 100% because that's probably going to be the most common (players are greedy)
        - maybe eventually add a "share gold" game option to split gold piles evenly among players automatically
          - only really works thematically if they stay next to each other, though
    - add to container (using slider)
      - sell items if shop at math.floor(0.8 * cost)
      - simple add if chest

  - Host container and unit interactions:
    - view current inventory
    - add items based on template
    - add item (using slider)
    - remove item (using slider)
    - change amount for each item (using slider?)
      - absolute numbers instead of relative numbers
      - if container, image/label changes above also apply
    - if gold, instead of "item" it is just gold quantity
      - no template for gold

  - Templates (tired, for quick-stocking):
    - shops, chests, packs, units (not gold piles; units include mobs)
    - when first placing, call a template dialog with the default selection as "Empty"
      - except for gold piles, which will just be the slider

  - Add code for investigate drop (pack) container.
    - Make sure container code no longer assumes that there is only one container per hex.
    - The drop is the only container that can coexist with another hex, but it won't be map-visible if it does.

  - On a unit with inventory's death:
    - If not standing on a hex with container, a pack icon appears and inventory is added to a drop container.
    - If it dies on a hex with an existing pack, the items are added to the pack's items.
    - If it dies on a hex with another non-pack container, the drop is there in Investigate but is not map-visible.
    - If a unit dies to plague, the inventory stays on the zombie until dead, but zombies cannot manage inventory!

  - Save and load container state so that it works for saves and loads.
    - Even the array used to verify interactions doesn't seem to save.
      - Because its creation needs to go in its own function that's only run once, not in set_all_menu_items

  - Allow multiple containers on the same hex.
    - Probably only show one icon.
    - Make sure simple_place only adds it to the location list if it's not already there.
    - Make sure clear only clears it if all containers are removed.

 (2) Interaction (1%)
  - Let units give things to adjacent units.
    - Inventory (all unequipped items)
    - Gold (if leader)
      - Gold coins (item) if not leader (anyone should be able to hold them, but only leader should be able to cash them)
        - This means that gold piles should always be in intervals of 10 and regular units will only pick up coins, not gold.

  - Bribing
    - Allow certain units to be bribed through interactions (and mark with certain icon?) if the host toggles them.
    - For 1.5x cost in gold, they will change to player's team and then lose the ability to be bribed.
    - In addition to a unit-by-unit setting, there will be game setting that will allow some lower-level units to spawn as bribable:
      - 100% chance for spawned non-summoner level 0s
      - 15% chance for spawned non-summoner level 1s
      - 10% chance for spawned non-summoner level 2s
      - Undead, elementals, animals, monsters, etc., cannot be bribed unless manually set that way.
    - Bribing will consume all movement and disable attacks and will only be allowed if you haven't attacked.

 (3) Inventory (1%)
  - Multiples stack the turn duration, not the effect strength.
  - Do the turn effects by repeatedly applying an [object] of duration
    turn each turn until the counter goes to 0, adding to the counter
    if more items are used? Or use abilities?
  - And once you get the berserk, the berserk will stay until the
    entire effect goes away.

  - Haste: Extra melee strike, +2 total moves.
  - Ale: "Confidence" ability: +5 max HP for 3 turns.
    - 25% chance of also becoming drunk (berserk melee) for that duration each time used

 (4) Details (1%)
  - Pick character dialog.
    - Have the host be able to change which level is available, which types are available, etc.

  - Spawn non-summoner unit dialog.
    - A similar unit dialog to pick character dialog can also be used to spawn every single unit as regular non-summoning/non-summoned enemies/NPC for flavor
      - Make sure that there's a way to mass-spawn a whole group of NPCs for quickly setting up towns/enemies.
      - And eventually they can be tied to map logic to spawn during variants of the RPG when the host is not omnipotent.
        - And of course this opens the door to quests, preset interactions/messages, etc.
        - Including perhaps fancy dialog-driven RPG-style branching texts where you choose responses.
    - This could also then replace the textbox in Transform.

***

 (4) Details (1%)
  - Maybe let the host fire the character selection at other times to let players create a new character, e.g. when handing side 7 or 8 to observers or recycling a dead side 2-5 to observers.

  - Upgrades
    - Raise the cap on intelligence upgrades so there can be more than one?
    - Add strength and dexterity upgrades.
      - They probably need to be implemented differently, with [object]
      - Damage increase should probably actually be roughly constant, i.e. more damage increase for units with fewer strikes
        - e.g. +4 if 1 strike, +2 if 2 strikes, +1 otherwise
        - how would this work if under a temporary strike-increasing effect, for units whose strikes change, or for units with more than one attack?
    - There needs to be a visible indicator over the unit that the unit can be upgraded.

  - Host unit modifying.
    - Use sliders and keep values within a reasonable range, which will vary depending on the stat.
    - Toggle the boss regenerate on/off, e.g. optionally for when turned to/from summoner.
    - Allow modifying attacks and traits if possible.
    - Add a unit teleport command.

  - Non-container map objects.
    - teleporters
    - traps (damage and/or status modifier and/or other unit changes on touching a hex)
    - doors (instead of manually removing walls)
    - keys/locks for doors/chests/etc.
      - also doors/chests/etc. that can only open for certain sides or teams or units
        - or chests that provide different inventory lists for different units
        - e.g. a chest that provides universal storage and can be accessed in more than one place
    - triggers (perhaps runes?) for various things (including doors)

  - Summoners.
    - Add a toggleable default gender to use when two genders are possible so it doesn't always default to male.
    - Allow one option, the default, to be Random Gender. Make sure to use a random that's MP safe.
    - Also allow selection on an individual basis once the GUI2 is extended (see Future).

  - Check how inventory's effects interact if promoted while the effect is still on.

  - Let Sylphs and/or Shydes disguise themselves as regular Elvish Ladies.
    - They would stay as summoners but lose the icon, being the only stealth summoners in the game.
    - Perhaps allow other disguising, e.g. Assassins.

 (5) Issues (2%)
  * VERY MAJOR BUG: Block right click menu items on map border because they cause unpredictable bugs.
    - e.g. some border hexes can change terrain and some just change (1,1)
    - and all the units spawned on borders spawn on (1,1) instead, potentially overwriting a unit on (1,1)

  * BUG: The state of toggled right click menus is not saved.
  * BUG: If a unit is transformed to Undead and then to something else they stay Undead in their traits.
  * BUG: Fix icon size for Summon <foo> and Summon Summoner.
  * BUG: Changing the gender of a unit doesn't change its portrait to the other variant.
    - In fact, it locks the unit into the old portrait even if it promotes.
  * BUG: Transforming a leader unit will automatically give it quick on the next map if becomes a dwarf, wose, etc. (4 MP?)
  * BUG: If the host has summoners of different types surround a hex, there will be too many Summon <Foo> for that hex and other menu items will start to be cut off.
  * BUG: Objectives don't show up right in the set menu.
  * BUG: Filter out the summoners before the dialog part so there aren't e.g. empty Level 4s for Summon <Foo>
  * BUG? What happens if someone disconnects during the character selection dialog?

  * FEATURE: Max_experience of 1 and 2 will never increase on AMLA'd units. Perhaps set a minimum of 3 or even 10 to avoid many multi-promotions.
  * FEATURE: AMLAing probably shouldn't increase max experience.
  * FEATURE: Change objectives by subsections (victory, loss, etc.) in a new interface so that formatting can be preserved.
  * FEATURE: Change the XP level from 100% or just modify AMLA XP to be lower?
  * FEATURE: If possible add a back button in addition to close for the complicated menus.
  * FEATURE: Replace Ancient Lich picture for menus/submenus in Unit Commands and Interaction.

  * CODE: Does 1.12 have a better way of dealing with advancement than event_post_advance() and event_advance()?
    * Maybe override [advancement] i.e. AMLA_DEFAULT?
  * CODE: Find a replacement for get_roles() and get_sides_with_all()
  * CODE: Most places probably can check for an empty list before calling menu() and show a better error there.
    - Alternatively, have every call feed in an error message for when the list is empty instead of saying "None"
  * CODE: There's a lot of boiler plate when every menu makes sure that its value is not false (i.e. not closed with the close button) before doing something. There might be a better way.
  * CODE: Fix spacing on GUI2 GUIs, especially the error message and the areas with more than one button.
  * CODE: remove all submenu_ functions in upgrades.lua and terrain_editor.lua
  * CODE: upgrades.lua need to put the non-menu functions in tables
    - upgrades.lua is a mess; behavior could be moved into functions
  * CODE: Re-sort the units.lua menu so that the order makes sense.
  * CODE: Clean up the gui2.lua code, which is now a mess and not entirely accurate in its names (e.g. "summoner" vs. "unit").

***

 (6) Future
    * Character selection
      * Have the host (or a vote, or the map) be able to restrict the unit categories/types available in character selection.
      * Allow player votes for things like max level or next map instead of leaving all the decisions to the host.
      * Select gender through the same window rather than a separate window.
      * Allow a random gender, and make this the default.
    * Extend the GUI2 wrapper so that it can handle more  than one return value.
      * Some windows could do more than one action with sliders, checkboxes, etc., instead of with text input.
        * especially changing side variables
          * showing all the stats at once instead of only on select would be useful here too
        * when setting objectives (three or more different text inputs at once)
        * also changing unit stats
      * Make the toggles have their own submenu in settings.
        * make them use checkboxes
        * make them say what the current state is based on check/uncheck
    * Magic [temporary via scrolls]
      * Gain wisdom (experience)
      * Radius healing (everything on one side within some radius for some amount of HP)
      * Summon <type> (enables you to summon for one turn and then disables summoning)
      * Flight (allows a temporary flying movetype)
      * Teleportation (used twice, the first remembers a spot and then second teleports you back there)
      * Faerie fire (new ranged attack for one turn)
      * Fireball (new ranged attack for one turn)
      * Also implement spells, which are similar but permanent and only for magical units.
    * Implement equipment (an extension of the inventory concept).
      * Using the item equips it into an equipment spot.
      * Unequipping it is possible from its own menu.
      * When the unit dies, all equipment is dropped like the regular inventory.
        * Unless that unit is turned into a zombie with plague, then it is kept until the zombie is killed.
      * When equipping an item to a spot that already has something, the old equipment is automatically unequipped.
      * Certain units (e.g. wolves) can't equip things.
      * Certain units (e.g. walking corpses) can have equipment, but can't manage it when alive.
    * Story-important, unsellable items.
    * Add preset super summoners for the late game when people have strong units, and to make high-level summons accessible.
      * Boost Ancient Lich HP to 101 so they can summon the Skeletal Dragon without first changing their HP.
      * Make sure there's a summoner who can summon the Yeti (Earth, 80 HP).
      * Make sure there's a summoner who can summon the Fire Drgaon (Fire, 100 HP).
    * Reduce max HP on summoner by 1 per level of active summoned unit?
    * Do something with boats?
    * Is there a way to alter promotions?
      * Ancient Lich; ENABLE_ANCIENT_LICH
      * Great Wolf & Dire Wolf; ENABLE_WOLF_ADVANCEMENT
      * Armageddon Drake; ENABLE_ARMAGEDDON_DRAKE
      * Dwarvish Runesmith; ENABLE_DWARVISH_RUNESMITH
      * Dwarvish Arcanister; ENABLE_DWARVISH_ARCANISTER
      * Troll Shaman; ENABLE_TROLL_SHAMAN
      * Death Knight; ENABLE_DEATH_KNIGHT
      * in mainline, this is done in [campaign] extra_defines in SoF and LoW, only one each
    * Resurrection.
      * When units die they are saved in a resurrection table.
      * The host can resurrect a unit. (rematches of old bosses?)
      * A resurrection spell on a scroll should be able to resurrect a unit too.
    * Add a way to control the recalling of units and recall lists.
      * Prevent the traditional keep-and-gold recalling of units.
      * Make sure that NPCs/enemies can be recalled, not just player summons.
    * Make sure everything (including items, secondary units, and possibly shop inventories) can transition between scenarios.
    * More Shop Stuff:
      * Shop options toggleable by host:
        * Make a shop not able to buy items.
        * Change shop price multiplier for selling to shop
        * Change shop price multiplier for buying to shop (for expensive shops)
      * Add more shop graphics for different flavor.
    * Add a difficulty mode that restricts what the host can do so more people can play as a fair host.
      * Including locking out the terrain editing and the stats editing, and limiting the Summon Summoners.
      * Also make terrain changes able to have costs, require being done by units or triggers, etc.
      * Similarly, traps, chests, etc., could be manually placed and/or moved by units if this happens.
      * If the NPCs/mob sides are restricted or AI, a lot of the options like unit levels to start at could be done by player vote.
    * Require download (as [modification]?), but make the Lua imported in a cleaner way and define some custom WML tags.
      * This will solve the problem of what to do for certain icons, e.g. for potion types, scrolls, and menu items.
      * The current closed scroll icon could be used for unidentified scrolls if it's going to be like roguelikes and require identifying.
      * This means more units can be added.
        * Common level 0 for horseman and cavalryman. (lawful, scout)
        * Common level 0 for mage and dark adept. (neutral, scholar)
        * Common level 0 for fencer/thief (neutral) or fencer/sergeant (lawful, noble)?
        * Is there still that era that adds a lot of level 0s? Is the quality good enough?
    * Let the AI be able handle things as NPCs/enemies, including summoning.
      * A very high probability to summon each turn if activated and HP > 50%
      * This gives the units for the AI-controled side to use in battle.
    * Allow saving/import of units/etc. saved in persistant variables. (Across campaigns!)
    * Make the time of day last longer (3 turns per phase?) so alignment matters more on the huge maps
      * Is there a way to make caves properly cave (either whole maps or parts of maps) without imbalancing in favor of chaotic?
    * Eventually make this the framework for RPGs in general, not just ones where the host controls sides 1 & 6.
      * Not even just RPGs. A lot of the general code can be used for completely different game types, e.g. recruiting via villages.

 (T) Translations
  - Units call .name in their menu and so are translated for free. (The strings are IDs, not names.)
  - Terrains call .editor_name and so are also translated for free. (Terrains are IDs, not names.)
  - Sometimes the code can use a simple _ prefix to the strings and work.
  - Most menu list of strings are more complicated because of the way the gui2 dialog code currently works.
  - Strings that are used with string.format() do not seem to work with the Wesnoth translation system, either.
